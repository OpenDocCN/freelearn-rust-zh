- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Thanks for your interest in functional programming in Rust. Rust is a very young
    programming language and is particularly new to the functional programming community.
    Despite its age, the language provides a wealth of tools that are both practical
    and sophisticated.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您对Rust中函数式编程的兴趣。Rust是一种非常年轻的编程语言，对于函数式编程社区来说尤其新。尽管如此，该语言提供了丰富的工具，这些工具既实用又复杂。
- en: In this book, we will introduce general functional programming principles and
    how they apply to Rust specifically. Our goal is to provide knowledge and a perspective
    on Rust that will outlast small changes to language features. The pace of development
    of Rust is so fast that during the course of writing the book we introduced new
    features as they became available and relevant. We want to equip the reader to
    produce code for this fast-moving environment such that they are prepared to best
    utilize new features as they are released.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将介绍通用的函数式编程原则以及它们如何具体应用于Rust。我们的目标是提供关于Rust的知识和视角，这些知识和视角将超越语言特性的微小变化。Rust的发展速度非常快，在本书写作过程中，我们引入了新功能，因为它们变得可用且相关。我们希望让读者能够为这个快速变化的环境编写代码，以便他们能够最好地利用新功能。
- en: Who this book is for
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is for developers who are familiar with basic Rust features or are
    willing to reference other material as they read along. We will not fully explain
    every new symbol, library, or syntax form, but we do explain libraries that are
    considered more advanced or syntax that may be difficult to read. Similarly, some
    concepts that are only briefly explained in the introductory material will be
    explained in detail.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向熟悉基本Rust特性或愿意在阅读过程中参考其他材料的开发者。我们不会全面解释每个新的符号、库或语法形式，但我们会解释被认为是更高级的库或可能难以阅读的语法。同样，一些仅在介绍性材料中简要解释的概念将在详细解释。
- en: What this book covers
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](9221248a-8815-4394-8042-b2b5bb10cd5e.xhtml), *Functional Programming –
    a Comparison*, introduces functional programming in Rust. Comparisons are drawn
    between functional style and other paradigms that are prevalent or influential
    to Rust. The chapter also serves as a brief outline of topics that will appear
    later in the book.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](9221248a-8815-4394-8042-b2b5bb10cd5e.xhtml)，*功能编程比较*，介绍了Rust中的函数式编程。比较了函数式风格与其他在Rust中普遍或具有影响力的范例。本章还简要概述了书中将出现的主题。'
- en: '[Chapter 2](bf10aff4-ca84-44a7-a982-b156c9cde41e.xhtml), *Functional Control
    Flow*, introduces Rust control flow structures while explaining how they are relevant
    to the functional style of programming. The expression-centric nature of functional
    programming and Rust is illustrated through examples. Limiting as it may be, the
    chapter also begins an ongoing project using only the procedural expression style
    of programming.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](bf10aff4-ca84-44a7-a982-b156c9cde41e.xhtml)，*功能控制流*，介绍了Rust的控制流结构，并解释了它们如何与函数式编程风格相关。通过示例展示了函数式编程和Rust以表达式为中心的特性。尽管有所限制，本章还开始了仅使用过程式表达式风格的编程的持续项目。'
- en: '[Chapter 3](a7c186b6-4fab-40d8-a684-bc0cc5695ab6.xhtml), *Functional Data Structures*,
    introduces the reader to the various, highly expressive  data types available
    in Rust. Notably, the enum type is introduced, which holds particular significance
    in functional programming. The project continues to grow to incorporate a variety
    of these data types.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](a7c186b6-4fab-40d8-a684-bc0cc5695ab6.xhtml)，*功能数据结构*，向读者介绍了Rust中可用的各种高度表达的数据类型。值得注意的是，枚举类型被引入，这在函数式编程中具有特殊意义。项目继续扩展，以包含这些数据类型。'
- en: '[Chapter 4](17b4796f-bd1b-4844-afe2-46653b0792f8.xhtml), *Generics and Polymorphism*,
    explains the concepts of parameterization of data (generics) and parameterization
    of control flow (polymorphism). Parameterization and its natural interaction with
    traits reduces the programmer''s burden, but the syntax can become overwhelming.
    Some approaches to reduce or mitigate parameter explosion are introduced. The
    ongoing project again grows to incorporate these features.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第四章](17b4796f-bd1b-4844-afe2-46653b0792f8.xhtml)，*泛型和多态*，解释了数据（泛型）和控制流（多态）参数化的概念。参数化及其与特质的自然交互减轻了程序员的负担，但语法可能会变得复杂。介绍了减少或缓解参数爆炸的一些方法。持续项目再次扩展，以包含这些特性。'
- en: '[Chapter 5](1424cb34-bb60-4cd3-9490-559e041251ed.xhtml), *Code Organization
    and Application Architecture*, talks about some architectural concerns, recommendations,
    and best practices. Designing and managing the implementation of a software project
    is not formulaic. No project is the same, and few are highly similar, thus no
    engineering procedure can capture the nuances of software development. In this
    chapter, we provide the best tools available, and specifically, the best that
    functional programming has to offer.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](1424cb34-bb60-4cd3-9490-559e041251ed.xhtml)，*代码组织和应用程序架构*，讨论了一些架构关注点、建议和最佳实践。设计和管理软件项目的实现并非公式化。没有项目是完全相同的，而且很少有项目高度相似，因此没有工程流程能够捕捉软件开发的所有细微差别。在本章中，我们提供了最佳的工具，特别是功能编程所能提供的最佳工具。'
- en: '[Chapter 6](b2733e9a-c163-4204-9a6e-6b1a2b8af397.xhtml), *Mutability, Ownership,
    and Pure Functions*, digs into some of the more unique features in Rust. This
    chapter introduces the concepts of ownership and lifetimes, which are common stumbling
    blocks when learning Rust. The functional concepts of immutability and pure functions
    are also introduced to help untangle some of the spaghetti that a naive Rust programmer
    might generate when attempting to circumvent the rules of ownership in Rust.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](b2733e9a-c163-4204-9a6e-6b1a2b8af397.xhtml)，*可变性、所有权和纯函数*，深入探讨了Rust中的一些独特特性。本章介绍了所有权和生命周期概念，这些是学习Rust时常见的绊脚石。还介绍了不可变性和纯函数的功能性概念，以帮助解开一个天真的Rust程序员在试图规避Rust的所有权规则时可能产生的混乱代码。'
- en: '[Chapter 7](c696c1cd-80aa-4ffe-a4e5-c7d9bcdcc430.xhtml), *Design Patterns*,
    lists as many functional programming cheat codes that can fit into a single chapter.
    The concept of functors and monads are explained with examples and some casual
    definitions. The chapter also briefly introduces the style of functional reactive
    programming and uses it to build a quick and dirty web framework.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](c696c1cd-80aa-4ffe-a4e5-c7d9bcdcc430.xhtml)，*设计模式*，列出了可以放入单个章节中的许多功能编程速查代码。通过示例和一些随意的定义解释了函子（functors）和单子（monads）的概念。本章还简要介绍了功能反应式编程的风格，并使用它构建了一个快速而简单的Web框架。'
- en: '[Chapter 8](3066190b-837d-4a1e-b919-2bd04e810c41.xhtml), *Implementing Concurrency*,
    explains how to do multiple things at the same time. Most of the chapter is spent
    clarifying the differences and relative strengths and weaknesses between subprocesses,
    forked processes, and threads. The Rust thread concurrency model is then assumed
    and more information is provided to clarify Rust-specific logic regarding threads.
    Toward the end of the chapter, the actor model of concurrency is introduced, which
    is a robust model of concurrency that can adapt to most situations and programming
    paradigms.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](3066190b-837d-4a1e-b919-2bd04e810c41.xhtml)，*实现并发*，解释了如何同时做很多事情。本章的大部分内容都用于阐明子进程、分叉进程和线程之间的差异以及相对的优缺点。然后假设了Rust的线程并发模型，并提供了更多信息以阐明Rust特有的线程逻辑。在章节的末尾，介绍了并发的行为模型，这是一个能够适应大多数情况和编程范式的强大并发模型。'
- en: '[Chapter 9](c9c0719e-d50d-462a-b6e5-e8c02a1ee67e.xhtml), *Performance, Debugging,
    and Metaprogramming*, wraps up the book with some miscellaneous tips for programming
    in Rust. The performance tips are not particularly functional, but rather concerned
    primarily with language-specific details, general advice, or relevant bits of
    computer science. Debugging introduces many tips on how to prevent bugs. Also,
    how to use an interactive debugger is explained through examples. Metaprogramming
    explains precisely how Rust macros and procedural macros work. This is a great
    feature of Rust, but is not documented well, so it might be scary to approach.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](c9c0719e-d50d-462a-b6e5-e8c02a1ee67e.xhtml)，*性能、调试和元编程*，以一些关于在Rust中进行编程的杂项技巧结束本书。性能技巧并不特别实用，而是主要关注语言特定的细节、一般性建议或相关的计算机科学知识。调试部分介绍了许多防止错误发生的技巧。同时，通过示例解释了如何使用交互式调试器。元编程部分精确地解释了Rust宏和过程宏的工作原理。这是Rust的一个伟大特性，但文档并不完善，因此可能会让人感到有些畏惧。'
- en: To get the most out of this book
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用这本书
- en: We assume familiarity with the concepts from the first 10 chapters of Rust documentation
    ([https://doc.rust-lang.org/book/](https://doc.rust-lang.org/book/)). Some of
    the material from these chapters is fairly advanced, so we will also explain that
    here when relevant. However, the knowledge of syntax and very basic features will
    be expected.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们假设您熟悉Rust文档前10章的概念([https://doc.rust-lang.org/book/](https://doc.rust-lang.org/book/))。这些章节中的一些内容相当高级，因此当相关时，我们也会在这里解释。然而，我们将期望您了解语法和非常基本的功能。
- en: Clone the GitHub code repository and follow along. Tweak the examples and see
    what effects you can create.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 克隆GitHub代码仓库并跟随。调整示例并看看您能创造出什么效果。
- en: Stay curious. Some of the keywords we mentioned could fill an entire book with
    unique content. Some of these topics presented are so pervasive that they have
    decent Wikipedia articles to explain and expand on the concepts. However, knowing
    the keyword is required to even know what to search for.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持好奇心。我们提到的某些关键词可能足以填满一本关于独特内容的书。其中一些主题非常普遍，以至于有相当不错的维基百科文章来解释和扩展这些概念。然而，了解关键词是了解搜索什么的基础。
- en: Download the example code files
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packtpub.com](http://www.packtpub.com)的账户下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packtpub.com](http://www.packtpub.com/support)上登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“支持”选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载与勘误”。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书籍名称，并遵循屏幕上的说明。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦文件下载完成，请确保使用最新版本的软件解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows上的WinRAR/7-Zip
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac上的Zipeg/iZip/UnRarX
- en: 7-Zip/PeaZip for Linux
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux上的7-Zip/PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Functional-Programming-in-Rust](https://github.com/PacktPublishing/Hands-On-Functional-Programming-in-Rust). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 书籍的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Hands-On-Functional-Programming-in-Rust](https://github.com/PacktPublishing/Hands-On-Functional-Programming-in-Rust)。如果代码有更新，它将在现有的GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。去看看吧！
- en: Conventions used
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Let''s start by defining some of the type declarations for
    the `physics` module."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码词汇、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“让我们首先定义`physics`模块的一些类型声明。”'
- en: 'A block of code is set as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都写作如下：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要词汇或您在屏幕上看到的词汇。'
- en: Warnings or important notes appear like this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示看起来像这样。
- en: Tips and tricks appear like this.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧看起来像这样。
- en: Get in touch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：请将电子邮件发送至`feedback@packtpub.com`，并在邮件主题中提及书籍标题。如果您对本书的任何方面有疑问，请通过电子邮件联系我们的`questions@packtpub.com`。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**: 尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们非常感谢您能向我们报告。请访问[www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击勘误提交表单链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果您在互联网上以任何形式发现我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过`copyright@packtpub.com`与我们联系，并附上材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**: 如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com/)。'
- en: Reviews
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评价
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下您的评价。一旦您阅读并使用过这本书，为何不在购买它的网站上留下评价呢？潜在读者可以查看并使用您的客观意见来做出购买决定，我们Packt公司可以了解您对我们产品的看法，并且我们的作者可以查看他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如需了解更多关于Packt的信息，请访问[packtpub.com](https://www.packtpub.com/)。
