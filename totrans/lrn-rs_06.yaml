- en: Creating Your Own Rust Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建您的Rust应用程序
- en: We're now roughly half-way through the book and, rather than just continuing,
    this chapter has a number of tasks for you to attempt. Having a go at them will
    help reinforce what we have covered so far.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在大约完成了这本书的一半，而不是仅仅继续，这一章有几个任务供您尝试。尝试这些任务将有助于巩固我们到目前为止所涵盖的内容。
- en: In order to complete these, you will need to create the code as a full project
    using Cargo, as shown in [Chapter 1](part0021.html#K0RQ0-a5175cb437d742a9aed0ea574000ee2d),
    *Introducing and Installing Rust*. If you get stuck, possible solutions are included
    in the source code directory.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成这些，您需要使用Cargo创建一个完整的代码项目，如[第1章](part0021.html#K0RQ0-a5175cb437d742a9aed0ea574000ee2d)中所示，*介绍和安装Rust*。如果您遇到困难，源代码目录中包含可能的解决方案。
- en: Project 1 - let's start with some math
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目1 - 让我们从一些数学开始
- en: Analyzing of data is very important, and knowing how to produce a straight-line
    relationship is often of great importance. You will need to construct a couple
    of functions that will work out something known as a linear regression analysis.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析非常重要，了解如何产生直线关系通常非常重要。您需要构建几个函数，以完成所谓的线性回归分析。
- en: Requirements
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要求
- en: 'The following is a brief list of requirements for our project:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们项目的一些简要要求：
- en: Data will come from two vectors and will be floating point numbers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据将来自两个向量，并将是浮点数
- en: The answers will only be stored in main and displayed from there
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 答案将只存储在主中，并从那里显示
- en: The two vectors must have the same number of elements
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个向量必须具有相同数量的元素
- en: Supplied data
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供的数据
- en: The data required for this project is in the `Chapter 6` folder, `Projects/MathsData.txt`.
    The content of the file should be used within the application (copy and paste).
    If the data sets do not have the same number of elements, remove elements from
    the end of the set with the larger number of elements.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目的所需数据位于`第6章`文件夹中的`Projects/MathsData.txt`文件中。应在应用程序内使用文件内容（复制并粘贴）。如果数据集元素数量不同，请从元素数量较多的集合的末尾删除元素。
- en: 'Let''s look at the math required:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看所需的数学：
- en: '**The equation of a straight line**:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直线的方程**：'
- en: 'The equation is very simple:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 方程非常简单：
- en: '*y = mx + c*, where *m* is the gradient and *c* is the intercept on the y axis'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*y = mx + c*，其中*m*是斜率，*c*是y轴上的截距'
- en: '**Gradient of the regression line**:'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回归线的斜率**：'
- en: 'The equation is as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 方程如下：
- en: '&gt;![](img/00034.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '&gt;![](img/00034.jpeg)'
- en: 'This may look hairy but it''s quite simple, so long as the following rule is
    remembered:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能看起来很复杂，但只要记住以下规则，它就相当简单：
- en: '![](img/00035.jpeg) is not equal to ![](img/00036.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00035.jpeg)不等于![](img/00036.jpeg)'
- en: So, what is the difference?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，区别是什么？
- en: '![](img/00035.jpeg) means that it is the sum of x² while ![](img/00036.jpeg) is
    the sum of x squared. Let''s consider the following code as an example:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/00035.jpeg)表示它是x²的总和，而![](img/00036.jpeg)是x平方的总和。以下代码作为示例：'
- en: '![](img/00037.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00037.jpeg)'
- en: 'To save time at this point, it is worth performing the following calculations:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间，此时进行以下计算是值得的：
- en: '*xy* for each set, followed by ∑*xy* for each'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个集合的*xy*，然后是每个的∑*xy*
- en: ∑*x*, ∑*y*, ∑*x²*, (∑x)², ![](img/00038.jpeg) (the average of *x*), ;![](img/00039.jpeg) (the
    average of the *y* values)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ∑*x*, ∑*y*, ∑*x²*, (∑x)², ![](img/00038.jpeg)（*x*的平均值），![](img/00039.jpeg)（*y*值的平均值）
- en: The data is needed for the regression gradient and intercepts on the *y* value.
    After that is performed, it is simply a case of plugging in the numbers.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 需要数据用于回归斜率和*y*值上的截距。之后，只需将数字插入即可。
- en: For example, ∑y = 5.8907, ∑x = 5, ∑x² = 7.5, (∑x)² = 25, n = 4, ∑xy = 8.8528
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，∑y = 5.8907，∑x = 5，∑x² = 7.5，(∑x)² = 25，n = 4，∑xy = 8.8528
- en: '![](img/00034.jpeg)![](img/00040.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00034.jpeg)![](img/00040.jpeg)'
- en: Moreover, none of the math from here on in is any harder than that.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，从现在开始的所有数学都不比之前的难。
- en: '**Getting the intercepts**:'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**获取截距**：'
- en: 'We already have the formula for the intercept on the *y* axis (*c*) by the
    equation, which is as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经通过方程得到了*y*轴上的截距公式（*c*），如下所示：
- en: '![](img/00041.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.jpeg)'
- en: Again, using the same data as earlier, the numbers slot in and give an answer
    of -0.0167.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，使用之前相同的数据，数字填入并给出答案为-0.0167。
- en: 'Now, this is the intercept on y; however, we want the intercept on the x axis
    as well. To do this, we can say that we want to know the value of x when y = 0\.
    The equation of the straight line is *y = mx + c*; therefore, to get *x* by itself,
    the equation will be as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这是 y 轴上的截距；然而，我们还想得到 x 轴上的截距。为此，我们可以这样说，我们想知道当 y = 0 时 x 的值。直线的方程是 *y = mx
    + c*；因此，为了得到 *x* 本身，方程将是以下这样：
- en: '![](img/00042.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.jpeg)'
- en: Simple!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 简单！
- en: '**Deviation must be known**:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**偏差必须已知**：'
- en: There are two more factors to be considered with the regression analysis-the
    standard deviation (better known as the error in the line) and the *r²* value
    (the correlation coefficient; in other words, how good a straight line the line
    really is).
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在回归分析中还有两个因素需要考虑——标准差（更广为人知的是线的误差）和 *r²* 值（相关系数；换句话说，直线实际上有多好）。
- en: The two equations are a tad more difficult than before, but not by much.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个方程比之前稍微难一些，但不是很多。
- en: First off, some more calculations will cover the standard deviation and the
    r² calculations.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，一些额外的计算将涵盖标准差和 r² 的计算。
- en: 'For the standard deviation, we will need to know *(y[expt] - y[calc])²*. This
    can be done in line, as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 对于标准差，我们需要知道 *(y[expt] - y[calc])²*。这可以在行内完成，如下所示：
- en: y[expt] is the value from your experiment, y[calc] can be read as mx + c (all
    three are known). Therefore, if we just plug in the numbers then square the result,
    we end up with (y[expt] - y[calc])². These numbers are then added together to
    give ∑(y[expt] - y[calc])².
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: y[expt] 是实验中的值，y[calc] 可以读作 mx + c（三者都是已知的）。因此，如果我们只输入数字然后平方结果，我们最终得到 (y[expt]
    - y[calc])²。然后把这些数字加起来得到 ∑(y[expt] - y[calc])²。
- en: In the r² calculation, we will need to calculate ![](img/00043.jpeg) and then
    sum the results. This is easy, as are the parts in the denominator.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在 r² 的计算中，我们需要计算 ![](img/00043.jpeg) 并然后汇总结果。这很容易，分母的部分也是如此。
- en: However, wait a second; there is a common item in both the deviation and r²
    calculation, namely raising to the power ½. This is actually just another way
    of saying a square root.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，等等；偏差和 r² 计算中有一个共同的项目，即开平方根。这实际上只是另一种说平方根的方式。
- en: It is now just a case of plugging in the numbers.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在只需要输入数字。
- en: Application output
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序输出
- en: 'The application has to output the following information:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序必须输出以下信息：
- en: Number of elements in each vector
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个向量中的元素数量
- en: If the number of elements in vector are not the same, output the value(s) removed
    and from which vector is removed from
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果向量的元素数量不相同，输出被移除的值以及从哪个向量移除
- en: The equation of the straight line
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直线的方程
- en: Intercepts on the X and Y axis
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X 和 Y 轴上的截距
- en: The standard deviation on the data
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据的标准差
- en: The r² value
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: r² 值
- en: Project 2 - some text manipulation
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目 2 - 一些文本操作
- en: A palindrome is a word that is spelled the same backwards as it is forward.
    For example, the word *madam* is a palindrome.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 回文是一个单词，它的拼写从后往前读和从前往后读是一样的。例如，单词 *madam* 就是一个回文。
- en: Requirements
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要求
- en: 'The following is a brief list of requirements:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个简要的要求列表：
- en: The application takes a line of text from the keyboard.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序从键盘接收一行文本。
- en: It should fail if the line is blank or contains a non-alphabet character.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果直线是空的或包含非字母字符，应该失败。
- en: Any text entered should be converted to either lower- or upper-case.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入的任何文本都应该转换为小写或大写。
- en: The word should be tested in a separate function to see if it is a palindrome.
    If it is, the function should return true; otherwise it should return false.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该在单独的函数中测试单词是否是回文。如果是，函数应该返回 true；否则应该返回 false。
- en: The calling function should output whether the inputted text is (or not) a palindrome.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用函数应该输出输入的文本是否（或不是）一个回文。
- en: Code notes
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码注释
- en: The palindrome function should be recursive.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 回文函数应该是递归的。
- en: Project 3 – area and volume
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目 3 - 面积和体积
- en: This project should help consolidate both testing and documentation for your
    applications.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目应该有助于巩固你应用程序的测试和文档。
- en: 'You have a simple web service running on a server somewhere. It exists as a
    test bed for users to send data and receive it back. The service is expecting
    three strings to be entered, which are as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你有一个简单的网络服务在某台服务器上运行。它作为一个测试平台，让用户发送数据并接收回数据。该服务期望输入三个字符串，如下所示：
- en: Username (string, non-null, must be more than 6 characters, no spaces)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名（字符串，非空，必须超过 6 个字符，不允许有空格）
- en: Password (string, non-null, must be more than 8 characters, no spaces, must
    have 1 capital, 1 number)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码（字符串，非空，必须超过8个字符，不能有空格，必须包含1个大写字母，1个数字）
- en: Command string
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 命令字符串
- en: The command string is a comma-separated list containing details of whether it
    is to be a volume or area calculation, the type of shape, and the parameter list.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 命令字符串是一个以逗号分隔的列表，包含是否为体积或面积计算，形状类型和参数列表的详细信息。
- en: Shape types
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 形状类型
- en: '| **Type** | **Shape** | **Type** | **Shape** |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| **类型** | **形状** | **类型** | **形状** |'
- en: '| 0 | Circle/Sphere | 3 | Pentagon |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 圆/球体 | 3 | 五边形 |'
- en: '| 1 | Triangle/Pyramid | 4 | Octagon |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 三角形/棱锥 | 4 | 八边形 |'
- en: '| 2 | Rectangle/Box | 5 | User-defined |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 矩形/盒子 | 5 | 用户定义 |'
- en: Volume or area
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 体积或面积
- en: For the command string, area is given by true with the volume being false.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于命令字符串，区域由true给出，体积由false给出。
- en: User-defined shape
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户定义的形状
- en: This shape is up to you. It should be a shape is not currently on the list.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这个形状由你决定。它应该是一个目前不在列表上的形状。
- en: Formulae for calculations
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算公式
- en: 'You should use the following formulae for the calculations:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该使用以下公式进行计算：
- en: '| Shape | Area | Volume |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 形状 | 面积 | 体积 |'
- en: '| Circle/sphere(r = radius) | *A = Πr²* | *V = 4/3Πr³* |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 圆/球体(r = 半径) | *A = Πr²* | *V = 4/3Πr³* |'
- en: '| Triangle/Pyramid(b = base, h = height, l = length, w = width) | *A = 1/2bh*
    | ![](img/00044.jpeg) |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 三角形/棱锥(b = 底边，h = 高，l = 长度，w = 宽) | *A = 1/2bh* | ![图片](img/00044.jpeg) |'
- en: '| Rectangle/Box(l = length, h = height, b = width) | *A = lh* | *V = lbh* |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 矩形/盒子(l = 长度，h = 高，b = 宽) | *A = lh* | *V = lbh* |'
- en: '| Pentagon(a = side length, h = height) | ![](img/00045.jpeg) | ![](img/00046.jpeg)
    |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 五边形(a = 边长，h = 高) | ![图片](img/00045.jpeg) | ![图片](img/00046.jpeg) |'
- en: '| Octagon(a and s = side length, h = height) | ![](img/00047.jpeg) | ![](img/00048.jpeg)
    |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 八边形(a和s = 边长，h = 高) | ![图片](img/00047.jpeg) | ![图片](img/00048.jpeg) |'
- en: Testing criteria
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试标准
- en: 'Consider the following testing criteria:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下测试标准：
- en: '**Command line**: When testing the parameter data, any values as **0** should
    cause the first test to fail. For the second test, **0** should be replaced with
    a floating point value of your choice.'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**命令行**：在测试参数数据时，任何值为**0**的值应导致第一次测试失败。对于第二次测试，**0**应替换为你选择的浮点值。'
- en: 'The command line must come in the following format:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行必须以下列格式提供：
- en: '[PRE0]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For example, true, 1, 3.1, 33.12, 4.3 is valid; whereas, false, 1, 12 will fail.
    (It requires two values to be passed in.)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，true, 1, 3.1, 33.12, 4.3是有效的；而false, 1, 12将失败。（它需要传递两个值。）
- en: A command line such as false, 1, 12.1, 13.5, 1.4, 0 will not fail as anything
    in the parameter list past the required number of parameters for the calculation
    can be ignored.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行如false, 1, 12.1, 13.5, 1.4, 0不会失败，因为参数列表中超过计算所需参数数量的任何内容都可以忽略。
- en: If the command fails, the output should always be -1.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果命令失败，输出应该始终是-1。
- en: '**Username and password**: The username and passwords have to meet the criteria
    set out at the start of the puzzle. If they fail, the output should be either
    Username failed or Password failed. No other reasons are required.'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用户名和密码**：用户名和密码必须符合谜题开始时设定的标准。如果失败，输出应该是“用户名失败”或“密码失败”。不需要其他原因。'
- en: Auto-documentation
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动文档
- en: Documentation should be generated for each function with the entry and exit
    parameter clearly stated.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 应为每个函数生成文档，并清楚地说明入口和出口参数。
- en: Using regular expressions (regex)
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用正则表达式（regex）
- en: While Rust does come with Regex as its own crate, you are encouraged to create
    your own method to test string inputs.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Rust 自带正则表达式作为其自己的包，但你被鼓励创建自己的方法来测试字符串输入。
- en: Input and output
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输入和输出
- en: 'As with all other examples, this should all be via the standard terminal entry
    and exit points (read keyboard and monitor). I would suggest three prompts: *username*,
    *password*, and *command line* as, after each input, it will be simpler to test
    the input submitted and respond appropriately.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有其他示例一样，这都应该通过标准终端的输入和输出点（读取键盘和显示器）进行。我建议使用三个提示：*用户名*，*密码*和*命令行*，因为每次输入后，将更容易测试提交的输入并相应地做出反应。
- en: Project 4 – memory
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目4 – 内存
- en: 'In this project, you are to perform the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，你需要执行以下操作：
- en: Reserve a 1024-byte block of memory.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预留一个1024字节的内存块。
- en: Fill that block of memory with random characters.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用随机字符填充那块内存。
- en: Create an array, which is also 1,024 bytes in size.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个大小也是1,024字节的数组。
- en: Copy the contents of the memory block into the array.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将内存块的内容复制到数组中。
- en: Create a string that is limited to 1,024 bytes and is set using the `capacity`
    function.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个由`capacity`函数设置的1,024字节限制的字符串。
- en: Copy the contents of the memory block into the string.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将内存块的内容复制到字符串中。
- en: At this point, you may be wondering why we have three identical blocks of memory.
    The simple reason is that you will now create a piece of code that will rotate
    each member in turn 3 times using a simple left-bit rotation and then 3 times
    to the right.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能想知道为什么我们有三个相同的内存块。简单的原因是，你现在将创建一段代码，将依次将每个成员旋转 3 次，先进行简单的左移位旋转，然后向右旋转
    3 次。
- en: Bitwise rotation
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 位运算旋转
- en: Bitwise rotation is performed in Rust using the `<<` and `>>` operators.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Rust 中，使用 `<<` 和 `>>` 运算符执行位运算旋转。
- en: For example, if we have a variable called `x` that is rotated 3 to the left,
    we will write `x << 3` with 3 to the right being `x >> 3`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们有一个名为 `x` 的变量，它向左旋转了 3 位，我们将写 `x << 3`，而向右旋转则是 `x >> 3`。
- en: Say we have *x = 01101001*, `x << 3` will be 01001000 and `x >> 3` will be 00001101.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有一个 *x = 01101001*，`x << 3` 将会是 01001000，而 `x >> 3` 将会是 00001101。
- en: Rotation caveat
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 旋转注意事项
- en: While we can simply have `x << 3`, what we need for this puzzle is to perform
    a single rotation 3 times, (so it is actually `x << 1`, `x << 1`, `x << 1`).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们可以简单地使用 `x << 3`，但这个谜题需要我们执行单次旋转 3 次（所以实际上是 `x << 1`，`x << 1`，`x << 1`）。
- en: Output
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 输出
- en: It is not expected that the values you started off with will be the values you
    ended up with (if you shift too far, the empty spaces in the byte are filled with
    0's). You should be able to find how many bytes have a value of 0\. You should
    display this at the end.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 并不期望你开始时的值就是你最终得到的值（如果你移位太远，字节中的空位将被 0 填充）。你应该能够找出有多少字节具有值为 0。你应该在最后显示这个结果。
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Trying these four different types of programming challenge should have helped
    firm up the knowledge you have gained from the first half of the book. In the
    next half, we'll be covering more advanced topics and will continue to explore
    the strength and flexibility that Rust can provide.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试这四种不同的编程挑战应该有助于巩固你从本书前半部分获得的知识。在下半部分，我们将探讨更高级的主题，并继续探索 Rust 可以提供的强大和灵活性。
