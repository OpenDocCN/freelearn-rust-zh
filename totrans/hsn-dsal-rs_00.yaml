- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When I first made the effort of learning one programming language a year, I
    started with Ruby, then learned a bit of Scala, until, in 2015, I started with
    a very new language: Rust. My first attempts at creating a Slack (a team chat
    program) bot were somewhat successful but very frustrating. Being used to Python''s
    flexibility with JSON data and permissive compiler, Rust''s steep learning curve
    quickly took its toll.'
  prefs: []
  type: TYPE_NORMAL
- en: The next projects were more successful. A database driver, as well as my very
    own **Internet of Things** (**IoT**)-type client and server application for the
    Raspberry Pi, allowed me to collect temperature data in a rock-solid manner. Unlike
    Python, if the program compiled, it would almost certainly work as expected—and
    I loved it.
  prefs: []
  type: TYPE_NORMAL
- en: Since then, a lot has changed. Big companies such as Microsoft and Amazon are
    picking up Rust as a way to create safe and fast code on embedded devices as well
    as in the cloud. With **WebAssembly** (**Wasm**), Rust is gaining traction in
    the web frontend space, and gaming companies are starting to build game engines
    in Rust. 2018 has been a great year for the technology and the Rust community,
    both of which will continue to grow in 2019 (and beyond).
  prefs: []
  type: TYPE_NORMAL
- en: For this reason, I hope to provide a learning resource for creating more sophisticated
    Rust code from a practical angle. Wherever your journey leads you, learning about
    Rust and its various programming models will change your view of code for the
    better.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Rust has great tutorials for learning the fundamentals of the language. There
    are workshops at every conference, regular meetups in many cities, and a very
    helpful online community. However, many developers find themselves beyond these
    resources but still don''t feel ready for more complex solutions. Especially coming
    from different backgrounds with years of experience, the transition can be daunting:
    examples on the one side feature some type of a "Hello World!" program; on the
    other side, there are huge Rust open source projects with thousands of lines of
    code – impossible to learn from quickly. If you feel like this, then this book
    is for you.'
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](e07bf37e-f255-42ef-abbb-9f141dc5be61.xhtml), *Hello Rust!*, gives
    a short recap of the Rust programming language and what changed in the 2018 edition.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](c6ebe545-0fc3-42fe-adf2-3a8d8fe3d501.xhtml), *Cargo and Crates*,
    discusses Rust''s `cargo` build tool. We will explore the configuration as well
    as the build process and modularization options.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](804d0af9-4267-4e94-a082-505ce23d8633.xhtml), *Storing Efficiently*,
    looks at how in Rust, knowing where values are stored is not only important for
    performance, but also important for understanding error messages and the language
    in general. In this chapter, we think about stack and heap memory.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](1a6971bb-ec24-47d5-b44c-cfb4da7d5b24.xhtml), *Lists, Lists, and
    More Lists*, covers the first data structures: lists. Using several examples,
    this chapter goes into variations of sequential data structures and their implementations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](84f203ac-a9f6-498b-90ff-e069c41aaca0.xhtml), *Robust Trees*, continues
    our journey through popular data structures: trees are next on the list. In several
    detailed examples, we explore the inner workings of these efficient designs and
    how they improve application performance considerably.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](95653045-6e1c-4ef7-bd0c-8e45b1ccfa1d.xhtml), *Exploring Maps and
    Sets*, explores the most popular key-value stores: maps. In this chapter, techniques
    surrounding hash maps; hashing; and their close relative, the set; are described
    in detail.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ba6dfa3b-1b5c-4033-a641-da15b9adb390.xhtml), *Collections in Rust*,
    attempts to connect to the Rust programmer''s daily life, going into the details
    of the Rust `std::collections` library, which contains the various data structures
    provided by the Rust standard library.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](6ab96dc6-b8f5-4c03-88a3-f4a345f8cc9b.xhtml), *Algorithm Evaluation*,
    teaches you how to evaluate and compare algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](a9ba9f9e-59a2-411f-8998-831fe4e69266.xhtml), *Ordering Things*,
    will look at sorting values, an important task in programming—this chapter uncovers
    how that can be done quickly and safely.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](32002bad-c2bb-46e9-918d-12d7dabfe579.xhtml), *Finding Stuff*,
    moves onto searching, which is especially important if there is no fundamental
    data structure to support it. In these cases, we use algorithms to be able to
    quickly find what we are looking for.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](0131b10b-0ea4-4663-966a-46d6ecda142b.xhtml), *Random and Combinatorial*,
    is where we will see that, outside of sorting and searching, there are many problems
    that can be tackled algorithmically. This chapter is all about those: random number
    generation, backtracking, and improving computational complexities.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](04e371f3-13fa-4c73-9329-8074a080785a.xhtml), *Algorithms of the
    Standard Library*, explores how the Rust standard library does things when it
    comes to everyday algorithmic tasks such as sorting and searching.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book comes with a lot of code examples and implementations. For you to
    learn the most that you can, it is recommended to install Rust (any version later
    than 1.33 should do) and run all of the examples. Here are a few recommendations
    for text editors and other tools:'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft's Visual Studio Code ([https://code.visualstudio.com/](https://code.visualstudio.com/)),
    arguably one of the best Rust code editors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rust support for Visual Studio Code via a plugin ([https://github.com/rust-lang/rls-vscode](https://github.com/rust-lang/rls-vscode))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rust Language Server** (**RLS**), found at [https://github.com/rust-lang/rls-vscode](https://github.com/rust-lang/rls-vscode),
    installed via `rustup` ([https://rustup.rs/](https://rustup.rs/))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Debugging support using the LLDB frontend plugin ([https://github.com/vadimcn/vscode-lldb](https://github.com/vadimcn/vscode-lldb))
    for Visual Studio Code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Having this environment set up and being familiar with it is great for your
    daily Rust programming, and will let you debug and inspect the workings of the
    code provided in this book. For you to get the most out of this book, we recommend
    that you do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Check out the source code in the repository to get the whole picture. The snippets
    are only isolated examples to show specifics.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Don't blindly trust our results; run the tests and benchmarks of each sub-project
    (chapters) to reproduce the findings yourself.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here [https://www.packtpub.com/sites/default/files/downloads/9781788995528_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/9781788995528_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Data-Structures-and-Algorithms-with-Rust](https://github.com/PacktPublishing/Hands-On-Data-Structures-and-Algorithms-with-Rust). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "The reason is that the `passing_through` variable outlives
    `x`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packt.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
