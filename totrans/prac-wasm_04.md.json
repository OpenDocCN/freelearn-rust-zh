["```rs\n00 61 73 6d 01 00 00 00\n```", "```rs\n 00 61 73 6d 01 00 00 00\n\\0  a  s  m  1  0  0  0 (ascii value of the character)\n|         |  |\n---------  version\n    |\nMagic Header\n```", "```rs\n(module ) \n```", "```rs\n module ::= {\n    types vec<funcType>,\n    funcs vec<func>,\n    tables vec<table>,\n    mems vec<mem>,\n    globals vec<global>,\n    elem vec<elem>,\n    data vec<data>,\n    start start,\n    imports vec<import>,\n    exports vec<export>\n } \n```", "```rs\n<section id><u32 section size><Actual content of the section> \n```", "```rs\n (func <name>? <func_type> <local>* <inst>* )\n```", "```rs\n(param $lhs i32) (param $rhs i32) (result i32) \n```", "```rs\n (func $add (param $lhs i32) (param $rhs i32) (result i32)\n    get_local $lhs\n    get_local $rhs\n    i32.add) \n```", "```rs\n (export <export_name> (func <function_reference>))\n```", "```rs\n (export \"add\" (func $add)) \n```", "```rs\n(module\n    (func $add (param $lhs i32) (param $rhs i32) \n      (result i32)\n        get_local $lhs\n        get_local $rhs\n        i32.add)\n    (export \"add\" (func $add))\n) \n```", "```rs\n # Sample code in C for reference\nint fib(n) {\n    if (n <= 1)\n        return 1;\n    else\n        return fib(n-1)+ fib(n-2);\n} \n```", "```rs\n (func $fib (param $n i32) (result i32)\n    ...\n)\n```", "```rs\n (local <name> <type>)\n```", "```rs\n (local $tmp i32) \n```", "```rs\ni32.const 1\nset_local $tmp \n```", "```rs\nget_local $n\ni32.const 2\ni32.lt_s\n```", "```rs\nblock $block\n... ; some code goes in here.\nend\n```", "```rs\nget_local $n\ni32.const 2\ni32.lt_s\nbr_if $block ; calls the $block` only when the condition\n  succeeds.\n```", "```rs\n (module\n  (func $fib (param $n i32) (result i32) (local $tmp i32)\n    i32.const 1\n    set_local $tmp\n    ; block\n    block $block\n      ; if condition\n      get_local $n\n      i32.const 2\n      i32.lt_s\n      br_if $block\n    ... ; some code\n    end\n    ; return value\n    get_local $tmp\n  )\n) \n```", "```rs\ni32.const 1\nset_local $tmp \n```", "```rs\nloop $loop\nend \n```", "```rs\nget_local $n\ni32.const -2\ni32.add\ncall $fib\nget_local $tmp\ni32.add\nset_local $tmp\nget_local $n\ni32.const -1\ni32.add\ntee_local $n\ni32.const 1\ni32.gt_s\nbr_if $loop\n```", "```rs\n(module\n  (func (export $fib (param $n i32) (result i32) \n    (local $tmp i32)\n    i32.const 1\n    set_local $tmp\n    ; block\n    block $block\n      ; if condition\n      get_local $n\n      i32.const 2\n      i32.lt_s\n      br_if $block\n      ; loop\n      loop $loop\n        get_local $n\n        i32.const -2\n        i32.add\n        call $fib\n        get_local $tmp\n        i32.add\n        set_local $tmp\n        get_local $n\n        i32.const -1\n        i32.add\n        tee_local $n\n        i32.const 1\n        i32.gt_s\n        br_if $loop\n      end\n    end\n    ; return value\n    get_local $tmp\n  )\n)\n```"]