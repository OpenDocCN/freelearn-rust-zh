["```rs\n$ cargo\nRust's package manager \n\nUSAGE: \n cargo [OPTIONS] [SUBCOMMAND] \n\nOPTIONS: \n -V, --version           Print version info and exit \n --list              List installed commands \n --explain <CODE>    Run `rustc --explain CODE` \n -v, --verbose           Use verbose output (-vv very verbose/build.rs output) \n -q, --quiet             No output printed to stdout \n --color <WHEN>      Coloring: auto, always, never \n --frozen            Require Cargo.lock and cache are up to date \n --locked            Require Cargo.lock is up to date \n -Z <FLAG>...            Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details \n -h, --help              Prints help information \n\nSome common cargo commands are (see all commands with --list): \n build       Compile the current project \n check       Analyze the current project and report errors, but don't build object files \n clean       Remove the target directory \n doc         Build this project's and its dependencies' documentation \n new         Create a new cargo project \n init        Create a new cargo project in an existing directory \n run         Build and execute src/main.rs \n test        Run the tests \n bench       Run the benchmarks \n update      Update dependencies listed in Cargo.lock \n search      Search registry for crates \n publish     Package and upload this project to the registry \n install     Install a Rust binary \n uninstall   Uninstall a Rust binary \n```", "```rs\n[package]\nname = \"ch2\"\nversion = \"0.1.0\"\nauthors = [\"Claus Matzinger\"]\nedition = \"2018\"\n\n[dependencies]\n```", "```rs\n[profile.release] \nopt-level = 3 \ndebug = false \nrpath = false \nlto = false \ndebug-assertions = false \ncodegen-units = 16 \npanic = 'unwind' \nincremental = false \noverflow-checks = false\n```", "```rs\n[dependencies]\nhyper = \"*\"\nrand = { version = \"0.5\", optional = true } \n```", "```rs\n[dependencies]\nhyper = \"*\"\n\n[dependencies.rand]\nversion = \"0.5\"\nfeatures = [\"stdweb\"]  \n```", "```rs\n[dependencies]\n# import in Rust with \"use web::*\"\nweb = { version = \"*\", package = \"hyper\" }\n\n[dependencies.random] # import in Rust with \"use random::*\" \nversion = \"0.5\"\npackage = \"rand\"\nfeatures = [\"stdweb\"] \n```", "```rs\n[dependencies] \nhyper = \"*\"\nrand = { git = \"https://github.com/rust-lang-nursery/rand\", branch = \"0.4\" }\n```", "```rs\n[workspace] \nmembers = [ \"core\", \"web\", \"data\"]\n```", "```rs\n#![feature(test)] \nextern crate test;\n\npub fn my_add(a: i32, b: i32) -> i32 {\n    a + b\n}\n\n#[cfg(test)] \nmod tests { \n    use super::*;\n    use test::Bencher;\n\n    #[test] \n    fn this_works() { \n        assert_eq!(my_add(1, 1), 2);\n    }\n\n    #[test]\n    #[should_panic(expected = \"attempt to add with overflow\")]\n    fn this_does_not_work() {\n        assert_eq!(my_add(std::i32::MAX, std::i32::MAX), 0);\n    }\n\n    #[bench]\n    fn how_fast(b: &mut Bencher) {\n        b.iter(|| my_add(42, 42))\n    }\n}\n```", "```rs\nFinished dev [unoptimized + debuginfo] target(s) in 0.02s\n Running target/debug/deps/ch2-6372277a4cd95206\n\nrunning 3 tests\ntest tests::how_fast ... ok\ntest tests::this_works ... ok\ntest tests::this_does_not_work ... ok\n\ntest result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n```", "```rs\n/// # A new Section\n/// this [markdown](https://daringfireball.net/projects/markdown/) is picked up by `Rustdoc` \n```", "```rs\n/// # A Simple Addition\n/// \n/// Adds two integers.\n/// \n/// # Arguments\n/// \n/// - *a* the first term, needs to be i32\n/// - *b* the second term, also a i32\n/// \n/// ## Returns\n/// The sum of *a* and *b*.\n/// \n/// # Panics\n/// The addition is not done safely, overflows will panic!\n/// \n/// # Examples\n/// \n/// ```", "```rs\npub fn my_add(a: i32, b: i32) -> i32 {\n    a + b\n} \n```", "```rs\n$ cargo test \n Compiling ch2 v0.1.0 (file:///home/cm/workspace/Mine/rust.algorithms.data.structures/code/ch2) \n Finished dev [unoptimized + debuginfo] target(s) in 0.58s \n Running target/debug/deps/ch1-8ed0f81f04655fe4 \n\nrunning 0 tests \n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out \n\n Running target/debug/deps/ch2-3ddb7f7cbab6792d \n\nrunning 3 tests \ntest tests::how_fast ... ok \ntest tests::this_does_not_work ... ok \ntest tests::this_works ... ok \n\ntest result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out \n\n Doc-tests ch2 \n\nrunning 1 test \ntest src/lib.rs - my_add (line 26) ... ok \n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n```", "```rs\nextern \"C\" {\n    fn imported_function() -> i32;\n}\n\n#[no_mangle]\npub extern \"C\" fn exported_function() -> i32 {\n    42\n}\n```"]