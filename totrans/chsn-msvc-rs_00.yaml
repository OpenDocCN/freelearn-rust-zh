- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book will introduce you to the development of microservices with Rust.
    I started using Rust not that long ago, back in 2015\. It had only been a couple
    of months since the release of version 1.0 and, at that time, I didn't think that
    this tool would usher in a silent revolution that would disrupt the traditions
    associated with system programming, which, at that time, was tedious and in no
    way fashionable.
  prefs: []
  type: TYPE_NORMAL
- en: Maybe I'm exaggerating a little, but I have witnessed how companies stopped
    using the customary tools and began rewriting parts of their products or a number
    of services in Rust, and they were so happy with the outcome that they continue
    to do so time and again. Today, Rust is an important part of blockchain initiatives,
    the flagship for WebAssembly, and is an awesome tool for developing fast and reliable
    microservices that utilize all available server resources. Consequently, Rust
    has transformed itself from a hobby tool for curious developers into a strong
    foundation for modern products.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will learn how to create microservices using Rust. We begin
    with a short introduction to microservices, and discuss why Rust is a good tool
    for writing them. Then, we will create our first microservice using the `hyper`
    crate, and learn how to configure microservices and log activities. After that,
    we will explore how to support different formats of requests and responses using
    the `serde` crate.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is designed for two categories of reader—experienced Rust developers
    who are new to microservices, and advanced microservice developers who are new
    to Rust. I've tried to cover the ecosystem of useful tools and crates available
    for Rust developers today. This book describes the creation of microservices,
    from high-level frameworks to constructing low-level asynchronous combinators
    that produce responses with minimal resource blocking time. This book aims to
    allow you to find the solution to a specific task.
  prefs: []
  type: TYPE_NORMAL
- en: To be able to understand the topics covered in this book, you need a solid background
    in the Rust programming language (you should be able to write and compile applications
    using `cargo`, understand lifetimes and borrowing concepts, know how traits work,
    and understand how to use reference counters, mutexes, threads, and channels).
    If you are unfamiliar with Rust, take the time to understand these concepts before
    reading this book.
  prefs: []
  type: TYPE_NORMAL
- en: You also have to know how to write a minimal backend working on an HTTP protocol.
    You have to understand what REST is, and how to use it for applications. However,
    you don't have to understand how HTTP/2 works because we will use crates that
    provide abstractions agnostic to specific transport.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](f7ad26e1-b945-4ee1-ba6b-dc8fd510f4d3.xhtml), *Introduction to Microservices*,
    introduces you to microservices and how they can be created with Rust. In this
    chapter, we also discuss the benefits of using Rust for creating microservices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](621dffeb-7f43-4c11-9ac5-00a366dc8d9f.xhtml), *Developing a Microservice
    with Hyper Crate*, describes how to create microservices with the `hyper` crate,
    thereby allowing us to create a compact asynchronous web server with precise control
    over incoming requests (method, path, query parameters, and so on).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](751f86d9-59ce-4966-beb8-cd743b521373.xhtml), *Logging and Configuring
    Microservices*, includes information about configuring a microservice using command-line
    arguments, environment variables, and configuration files. You will also see how
    to add logging to your projects, since this is the most important feature for
    the maintenance of microservices in production.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](be6bf2c7-c1dd-4d9f-b036-bbb12e1de809.xhtml), *Data Serialization
    and Deserialization with Serde Crate*, explains how, in addition to customary
    HTTP requests, your microservice has to support formal requests and responses
    in a specific format, such as JSON, and CBOR, which is important for API implementation
    and in terms of organizing the mutual interaction of microservices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ed541ef5-4701-4e70-aabf-14882b4cecb3.xhtml), *Understanding Asynchronous
    Operations with Futures Crate*, delves into the deeper asynchronous concepts of
    Rust and how to use asynchronous primitives for writing combinators to process
    a request and prepare a response for a client. Without a clear understanding of
    these concepts, you cannot write effective microservices to utilize all available
    resources of a server, and to avoid the blocking of threads that execute asynchronous
    activities and require special treatment with execution runtime.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](fd4bf12a-bb05-469b-a230-163cee412261.xhtml), *Reactive Microservices
    – Increasing Capacity and Performance*, introduces you to a reactive microservice
    that won''t respond immediately to incoming requests, and that takes time to process
    a request and response when it''s done. You will become familiar with remote procedure
    calls in Rust and how to use the language so that microservices can call one another.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](e09a1e76-ae09-41d4-99dc-9bad95fa3de7.xhtml), *Reliable Integration
    with Databases*, shows you how to interact with databases using Rust. You will
    get to know crates that provide interaction with databases, including MySQL, PostgreSQL,
    Redis, MongoDB, and DynamoDB.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](78b65084-762a-4697-b142-f47b2120e4c6.xhtml), *I**nteraction to
    Database* *with Object-Relational Mapping*, explains how, in order to interact
    with SQL databases effectively and map database records to native Rust structs,
    you can use **object-relational mapping** (**ORM**). This chapter demonstrates
    how to use diesel crates which require nightly compiler version and whose capabilities
    are used for generating bindings with tables.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](6d371e55-d1cf-45b4-83a9-4d5098a885d0.xhtml), *Simple REST Definition
    and Request Routing with Frameworks*, explains how, in certain cases, you don''t
    need to write stringent asynchronous code, and that it is sufficient to use frameworks
    that simplify microservice writing. In this chapter, you will become acquainted
    with four such frameworks—rouille, nickel, rocket, and gotham.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ba240208-414e-4dd4-bba8-8bd2658949cd.xhtml), *Background Tasks
    and Thread Pools in Microservices*, discusses multithreading in microservices
    and how to use pools of threads to perform tasks on a background, given that not
    every task can be performed asynchronously and requires a high CPU load.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](5b7dd2c1-d623-4422-83a7-e05681230ee9.xhtml), *In**volving Concurrency
    with Actors and Actix Crate*, introduces you to the Actix framework, which uses
    the actor''s model to provide you with abstractions that are easily compatible
    with Rust. This includes the balance of performance, the readability of the code,
    and task separation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](98204850-538d-4a2b-9a77-23f85e716400.xhtml), *Scalable Microservices
    Architecture*, delves into an explanation of how to design loose-coupling microservices
    that don''t need to know about sibling microservices, and that use message queues
    and brokers to interact with one another. We will write an example of how to interact
    with other microservices using RabbitMQ.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](1d24de7f-9990-4afe-bd1c-9bf664f1eda3.xhtml), *Testing and Debugging
    Rust Microservices*, explains how testing and debugging is a key component in
    terms of preparing for the release of microservices. You will learn how to test
    microservices from unit tests to cover a full application with integration tests.
    Afterward, we will then discuss how to debug an application using debuggers and
    logging capabilities. Also, we will create an example that uses distributed tracing
    based on the OpenTrace API – a modern tool for tracking the activities of complex
    applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 14](4ad99248-05f9-41c0-91c5-4c4a2582226d.xhtml), *Optimization of
    Microservices*, describes how to optimize a microservice and extract the maximum
    performance possible.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 15](80b8c3ec-d291-40df-a7a7-b9e9f0a64a99.xhtml), *Packing Servers
    to Containers*, explains how, when a microservice is ready for release, there
    should be a focus on packing microservices to containers, because at least some
    microservices require additional data and environments to work, or even just to
    gain the advantage of fast delivery containers over bare binaries.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 16](02047e73-9d47-4f12-ae3c-99d5c77daf51.xhtml), *DevOps of Rust Microservices
    - Continuous Integration and Delivery*, continues with the theme of learning how
    to build microservices and explains how to use continuous integration to automate
    building and delivery processes for your product.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 17](2dceb3bc-2f03-47d9-88cd-561b4f0b50d7.xhtml), *Bounded Microservices
    with AWS Lambda*, introduces you to serverless architecture, an alternative approach
    to writing services. You will become acquainted with AWS Lambda and you can use
    Rust to write fast functions that work as a part of serverless applications. Also,
    we will use the Serverless Framework to build and deploy the example application
    to the AWS infrastructure in a fully automated manner.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You will require at least version 1.31 of Rust. Install it using the `rustup`
    tool: [https://rustup.rs/](https://rustup.rs/). To compile examples from some
    chapters, you will need to install a nightly version of the compiler. You will
    also need to install Docker with Docker Compose to run containers with databases
    and message brokers to simplify the testing of example microservices from this
    book.'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-Microservices-with-Rust](https://github.com/PacktPublishing/Hands-On-Microservices-with-Rust). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://www.packtpub.com/sites/default/files/downloads/9781789342758_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/9781789342758_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "Select System info from the Administration panel."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at `customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packt.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](http://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
