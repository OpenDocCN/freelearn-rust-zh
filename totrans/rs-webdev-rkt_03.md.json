["```rs\n    cargo new 01hello_rocket --name hello_rocket\n    ```", "```rs\n    rocket = \"0.5.0-rc.1\"\n    ```", "```rs\n    #[macro_use]\n    extern crate rocket;\n    ```", "```rs\n    use rocket::{Build, Rocket};\n    ```", "```rs\n    #[get(\"/\")]\n    fn index() -> &'static str {\n        \"Hello, Rocket!\"\n    }\n    ```", "```rs\n#[route(GET, path = \"/\")]\n```", "```rs\n    #[launch]\n    fn rocket() -> Rocket<Build> {\n        rocket::build().mount(\"/\", routes![index])\n    }\n    ```", "```rs\n    > cargo run\n       Updating crates.io index\n       Compiling proc-macro2 v1.0.28\n    ...\n       Compiling hello_rocket v0.1.0 (/Users/karuna/\n       Chapter02/01hello_rocket)\n    Finished dev [unoptimized + debuginfo] target(s) \n        in 1m 39s\n         Running `target/debug/hello_rocket`\n    ![](img/01.png) Configured for debug.\n       >> address: 127.0.0.1\n       >> port: 8000\n       >> workers: 8\n       >> ident: Rocket\n       >> keep-alive: 5s\n    >> limits: bytes = 8KiB, data-form = 2MiB, file = \n    1MiB, form = 32KiB, json = 1MiB, msgpack = 1MiB, \n       string = 8KiB\n       >> tls: disabled\n       >> temp dir: /var/folders/gh/\n       kgsn28fn3hvflpcfq70x6f1w0000gp/T/\n       >> log level: normal\n       >> cli colors: true\n    >> shutdown: ctrlc = true, force = true, signals = \n       [SIGTERM], grace = 2s, mercy = 3s\n    ![](img/04.png)  Routes:\n       >> (index) GET /\n    ![](img/02.png) Fairings:\n       >> Shield (liftoff, response, singleton)\n    ![](img/05.png) Shield:\n       >> X-Content-Type-Options: nosniff\n       >> X-Frame-Options: SAMEORIGIN\n       >> Permissions-Policy: interest-cohort=()\n    ![](img/03.png) Rocket has launched from http://127.0.0.1:8000\n    ```", "```rs\n    > curl http://127.0.0.1:8000\n    Hello, Rocket!\n    ```", "```rs\nGET /:\n   >> Matched: (index) GET /\n   >> Outcome: Success\n   >> Response succeeded.\n```", "```rs\n    > curl http://127.0.0.1:8000/somepath\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>404 Not Found</title>\n    </head>\n    <body align=\"center\">\n        …\n    </body>\n    </html>\n    ```", "```rs\nGET /somepath:\n   >> No matching routes for GET /somepath.\n   >> No 404 catcher registered. Using Rocket default.\n   >> Response succeeded.\n```", "```rs\n$ curl -v http://127.0.0.1:8000/somepath\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 8000 (#0)\n> GET /somepath HTTP/1.1\n> Host: 127.0.0.1:8000\n> User-Agent: curl/7.64.1\n> Accept: */*\n> \n< HTTP/1.1 404 Not Found\n< content-type: text/html; charset=utf-8\n< server: Rocket\n< x-frame-options: SAMEORIGIN\n< x-content-type-options: nosniff\n< permissions-policy: interest-cohort=()\n< content-length: 383\n< date: Fri, 17 Aug 1945 03:00:00 GMT\n< \n<!DOCTYPE html>\n...\n* Connection #0 to host 127.0.0.1 left intact\n</html>* Closing connection 0\n```", "```rs\n#[macro_use]\n```", "```rs\nextern crate rocket;\n```", "```rs\n#[get(\"/\")]\n```", "```rs\nasync fn index() -> &'static str {\n```", "```rs\n    \"Hello, Rocket!\"\n```", "```rs\n}\n```", "```rs\n#[rocket::main]\n```", "```rs\nasync fn main() {\n```", "```rs\n    rocket::build().mount(\"/\", routes![\n```", "```rs\n    index]).launch().await;\n```", "```rs\n}\n```", "```rs\nWarning: Received SIGINT. Requesting shutdown.\nReceived shutdown request. Waiting for pending I/O...\n```", "```rs\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\n```", "```rs\n    benchrs -c 30 -n 3000 -k http://127.0.0.1:8000/\n    07:59:04.934 [INFO] benchrs:0.1.8\n    07:59:04.934 [INFO] Spawning 8 threads\n    07:59:05.699 [INFO] Ran in 0.7199552s 30 connections, 3000 requests with avg request time: 6.5126667ms, median: 6ms, 95th percentile: 11ms and 99th percentile: 14ms\n    ```", "```rs\n    > cargo run –release\n    ```", "```rs\n    $ benchrs -c 30 -n 3000 -k http://127.0.0.1:8000/\n    08:12:51.388 [INFO] benchrs:0.1.8\n    08:12:51.388 [INFO] Spawning 8 threads\n    08:12:51.513 [INFO] Ran in 0.07942524s 30 connections, 3000 requests with avg request time: 0.021333333ms, median: 0ms, \n    5th percentile: 0ms and 99th percentile: 1ms\n    ```", "```rs\npub trait Default {\n```", "```rs\n    fn default() -> Self;\n```", "```rs\n}\n```", "```rs\npub struct Config {\n```", "```rs\n    pub profile: Profile,\n```", "```rs\n    pub address: IpAddr,\n```", "```rs\n    pub port: u16,\n```", "```rs\n    pub workers: usize,\n```", "```rs\n    pub keep_alive: u32,\n```", "```rs\n    pub limits: Limits,\n```", "```rs\n    pub tls: Option<TlsConfig>,\n```", "```rs\n    pub ident: Ident,\n```", "```rs\n    pub secret_key: SecretKey,\n```", "```rs\n    pub temp_dir: PathBuf,\n```", "```rs\n    pub log_level: LogLevel,\n```", "```rs\n    pub shutdown: Shutdown,\n```", "```rs\n    pub cli_colors: bool,\n```", "```rs\n    // some fields omitted\n```", "```rs\n}\n```", "```rs\n[default]\n```", "```rs\nport = 3000\n```", "```rs\n$ cargo run\n...\n Rocket has launched from http://127.0.0.1:3000\n```", "```rs\n[release]\n```", "```rs\nport = 9999\n$ cargo run --release\n...\n Rocket has launched from http://127.0.0.1:9999\n```", "```rs\n[default.tls]\n```", "```rs\ncerts = \"/some/directory/cert-chain.pem\"\n```", "```rs\nkey = \"/some/directory/key.pem\"\n```", "```rs\n[default]\n```", "```rs\ntls = { certs = \"/some/directory/cert-chain.pem\", key = \"/some/directory/key.pem\" }\n```", "```rs\n[default]\n```", "```rs\naddress = \"127.0.0.1\"\n```", "```rs\nport = 8000\n```", "```rs\nworkers = 16\n```", "```rs\nkeep_alive = 5\n```", "```rs\nident = \"Rocket\"\n```", "```rs\nlog_level = \"normal\"\n```", "```rs\ntemp_dir = \"/tmp\"\n```", "```rs\ncli_colors = true\n```", "```rs\n## Please do not use this key, but generate your own with `openssl rand -base64 32`\n```", "```rs\nsecret_key = \" BCbkLMhRRtYMerGKCcboyD4Mhf6/XefvhW0Wr8Q0s1Q=\"\n```", "```rs\n[default.limits]\n```", "```rs\nform = \"32KiB\"\n```", "```rs\ndata-form = \"2MiB\"\n```", "```rs\nfile = \"1MiB\"\n```", "```rs\nstring = \"8KiB\"\n```", "```rs\nbytes = \"8KiB\"\n```", "```rs\njson = \"1MiB\"\n```", "```rs\nmsgpack = \"1MiB\"\n```", "```rs\n[default.tls]\n```", "```rs\ncerts = \"/some/directory/cert-chain.pem\n```", "```rs\nkey = \"/some/directory/key.pem\n```", "```rs\n[default.shutdown]\n```", "```rs\nctrlc = true\n```", "```rs\nsignals = [\"term\"]\n```", "```rs\ngrace = 5\n```", "```rs\nmercy = 5\n```", "```rs\nforce = true\n```", "```rs\n$ ROCKET_PORT=4000 cargo run\n...\n Rocket has launched from http://127.0.0.1:4000\n```"]