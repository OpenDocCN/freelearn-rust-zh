["```rs\nlet mut stream = tokio::net::TcpStream::connect(\"127.0.0.1:3000\");\n```", "```rs\nlet non_leaf = async {\n    let mut stream = TcpStream::connect(\"127.0.0.1:3000\").await.unwrap();\n    println!(\"connected!\");\n    let result = stream.write(b\"hello world\\n\").await;\n    println!(\"message sent!\");\n    ...\n};\n```", "```rs\nasync fn foo() {\n    println!(\"Start!\");\n    let txt = io::read_to_string().await.unwrap();\n    println!(\"{txt}\");\n}\n```", "```rs\nlet non_leaf = async {\n    let mut stream = TcpStream::connect(\"127.0.0.1:3000\").await.unwrap();\n    // request a large dataset\n    let result = stream.write(get_dataset_request).await.unwrap();\n    // wait for the dataset\n    let mut response = vec![];\n    stream.read(&mut response).await.unwrap();\n    // do some CPU-intensive analysis on the dataset\n    let report = analyzer::analyze_data(response).unwrap();\n    // send the results back\n    stream.write(report).await.unwrap();\n};\n```"]