- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Rust is the new open source and compiled programming language that finally promises
    software developers the utmost safety—not only type safety but memory safety as
    well. The compiler carefully checks all uses of variables and pointers so that
    common problems from C / C++ and other languages, such as pointers to wrong memory
    locations or null references, are a thing of the past. Potential problems are
    detected at compilation time so that Rust programs execute at speeds that are
    comparable with their C++ counterparts.
  prefs: []
  type: TYPE_NORMAL
- en: Rust runs with a very light runtime, which does not perform garbage collection.
    Again the compiler takes care of generating code that frees all resources at the
    right time. This means Rust can run in very constrained environments, such as
    embedded or real-time systems. When executing code concurrently no data races
    can occur, because the compiler imposes the same memory safety restrictions as
    when the code executes consecutively.
  prefs: []
  type: TYPE_NORMAL
- en: From the preceding description, it is clear that Rust is applicable in all use
    cases where C and C++ were the preferred languages until now and that it will
    do a better job.
  prefs: []
  type: TYPE_NORMAL
- en: Rust is a very rich language; it has concepts (such as immutability by default)
    and constructs (such as traits) that enable developers to write code in a highly
    functional and object-oriented style.
  prefs: []
  type: TYPE_NORMAL
- en: The original goal of Rust was to serve as the language to write a new safe browser
    engine that was devoid of the many security flaws that plague existing browsers.
    This is the Servo project from Mozilla Research.
  prefs: []
  type: TYPE_NORMAL
- en: 'The goal of this book is to give you a firm foundation so that you can start
    to develop in Rust. Throughout the book, we emphasize the three pillars of Rust:
    safety, performance, and concurrency. We discuss the areas and the reasons why
    Rust differs from other programming languages. The code examples are not chosen
    ad hoc, but they are oriented as part of an ongoing project to build a game so
    that there is a sense of cohesion and evolution in the examples.'
  prefs: []
  type: TYPE_NORMAL
- en: Throughout the book, I will urge you to learn by doing things; you can follow
    along by typing in the code, making the requested modifications, compiling, testing,
    and working out the exercises.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0014.xhtml#aid-DB7S1 "Chapter 1. Starting with Rust"), *Starting
    with Rust*, discusses the main reasons that led to the development of Rust. We
    compare Rust with other languages and indicate the areas in which it is most appropriate.
    Then, we guide you through the installation of all the necessary components for
    Rust''s development environment.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0023.xhtml#aid-LTSU1 "Chapter 2. Using Variables and Types"),
    *Using Variables and Types*, looks at the basic structure of a Rust program. We
    discuss the primitive types, how to declare variables and whether they have to
    be typed, and the scope of variables. Immutability, which is one of the key cornerstones
    of Rust''s safety strategy, is also illustrated. Then, we look at basic operations,
    how to do formatted printing, and the important difference between expressions
    and statements.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0032.xhtml#aid-UGI01 "Chapter 3. Using Functions and Control
    Structures"), *Using Functions and Control Structures*, shows you how to define
    functions and the different ways to influence program execution flow in Rust.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0038.xhtml#aid-147LC2 "Chapter 4. Structuring Data and Matching
    Patterns"), *Structuring Data and Matching Patterns*, discusses the basic data
    types for programming, such as strings, vectors, slices, tuples, and enums. Then,
    we show you the powerful pattern matching that is possible in Rust and how values
    are extracted by de-structuring patterns.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0046.xhtml#aid-1BRPS1 "Chapter 5. Generalizing Code with Higher-order
    Functions and Parametrization"), *Generalizing Code with Higher-order Functions
    and Parametrization*, explores the functional and object-oriented features of
    Rust. You will see how data structures and functions can be defined in a generic
    way and how traits can be used to define behavior.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0056.xhtml#aid-1LCVG2 "Chapter 6. Pointers and Memory Safety"),
    *Pointers and Memory Safety*, exposes the borrow checker, which is Rust''s mechanism
    to ensure that only memory safe operations can occur. We discuss different kinds
    of pointers as well as how to handle runtime errors.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0062.xhtml#aid-1R42S2 "Chapter 7. Organizing Code and Macros"),
    *Organizing Code and Macros*, discusses the bigger code-organizing structures
    in Rust. We will also touch upon how to build macros in order to generate code
    and save time and effort.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0065.xhtml#aid-1TVKI2 "Chapter 8. Concurrency and Parallelism"),
    *Concurrency and Parallelism*, delves into Rust''s concurrency model with its
    basic concepts of threads and channels. We also discuss a safe strategy for working
    with shared mutable data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0069.xhtml#aid-21PMQ1 "Chapter 9. Programming at the Boundaries"),
    *Programming at the Boundaries*, looks at how Rust can take command-line parameters
    to process. Then, we go on to look at situations where we have to leave the safety
    boundaries, such as when we interface with C or use raw pointers, and how Rust
    minimizes potential dangers when we do so.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix](part0075.xhtml#aid-27GQ61 "Appendix A. Exploring Further"), *Exploring
    Further*, talks about the Rust ecosystem and where the reader can find more information
    about certain topics, such as working with files, databases, games, and web development.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To run the code examples in the book, you will need the Rust system for your
    computer, which can be downloaded from [http://www.rust-lang.org/install.html](http://www.rust-lang.org/install.html).
    This also contains the Cargo project and the package manager. To work more comfortably
    with the Rust code, a development environment such as Sublime Text can also be
    of use. [Chapter 1](part0014.xhtml#aid-DB7S1 "Chapter 1. Starting with Rust"),
    *Starting with Rust*, contains detailed instructions on how to set up your Rust
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for developers who have some programming experience in
    C/C++, Java/C#, Python, Ruby, Dart, or a similar language and a basic knowledge
    of general programming concepts. It will get you up and running quickly, giving
    you all you need to start building your own Rust projects.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can see that `main()` is a function declaration because it is preceded by the
    keyword `fn`, which is short and elegant like most Rust keywords."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "When working with Rust code, select **Tools** | **Build System** | **Rust**."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
