["```rs\n[profile.release]\ndebug = true\n```", "```rs\n1 // buggie/src/main.rs\n2 \n3 use std::env;\n4 \n5 pub fn fibonacci(n: u32) -> u32 {\n6     let mut a = 0;\n7     let mut b = 1;\n8     let mut c = 0;\n9     for _ in 2..n {\n10        let c = a + b;\n11        a = b;\n12        b = c;\n13    }\n14    c\n15 }\n16 \n17 fn main() {\n18     let arg = env::args().skip(1).next().unwrap();\n19     let pos = str::parse::<u32>(&arg).unwrap();\n20     let nth_fib = fibonacci(pos);\n21     println!(\"Fibonacci number at {} is {}\", pos, nth_fib);\n22 }\n```", "```rs\n(gdb) break 18\n```", "```rs\nBreakpoint 1 at 0x9147: file src/main.rs, line 18.\n```", "```rs\n(gdb) run\n```", "```rs\n(gdb) run\nStarting program: /home/creativcoder/buggie/target/debug/buggie 4\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nBreakpoint 1, buggie::main::h8018d7420dbab31b () at src/main.rs:18\n18        let arg = env::args().skip(1).next().unwrap();\n(gdb)\n```", "```rs\n(gdb) tui enable\n```", "```rs\n(gdb) next\n```", "```rs\n(gdb) print pos\n$1 = 4\n(gdb) \n```", "```rs\n(gdb) step\n```", "```rs\n(gdb) info locals\niter = Range<u32> = {start = 3, end = 4}\nc = 0\nb = 1\na = 1\n(gdb) info args\nn = 4\n(gdb) \n```", "```rs\npub fn fibonacci(n: u32) -> u32 {\n    let mut a = 0;\n    let mut b = 1;\n    let mut c = 0;\n    for _ in 2..n {\n        c = a + b;\n        a = b;\n        b = c;\n    }\n    c\n}\n```", "```rs\n// buggie/.vscode/launch.json\n\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Buggie demo\",\n            \"type\": \"gdb\",\n            \"request\": \"launch\",\n            \"target\": \"target/debug/buggie\",\n            \"cwd\": \"${workspaceRoot}\",\n            \"arguments\": \"4\",\n            \"gdbpath\": \"rust-gdb\",\n            \"printCalls\": true\n        }\n    ]\n}\n```", "```rs\nsudo dpkg -i https://github.com/mozilla/rr/releases/download/5.2.0/rr-5.2.0-Linux-x86_64.deb\n```", "```rs\nsudo apt-get install linux-tools-4.15.0-43-generic\n```", "```rs\nsudo sysctl -w kernel.perf_event_paranoid=-1\n```", "```rs\n// rr_demo/src/main.rs\n\nuse rand::prelude::*;\n\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    for i in 0..10 {\n        thread::spawn(move || {\n            let mut rng = rand::thread_rng();\n            let y: f64 = rng.gen();\n            let a: u64 = rand::thread_rng().gen_range(0, 100); \n            thread::sleep(Duration::from_millis(a));\n            print!(\"{} \", i);\n        });\n    }\n    thread::sleep(Duration::from_millis(1000));\n    println!(\"Hello, world!\");\n}\n```", "```rs\nrr record target/debug/rr_demo\n```", "```rs\nrr: Saving execution to trace directory `/home/creativcoder/.local/share/rr/rr_demo-15'\n```", "```rs\nrr replay -d rust-gdb /home/creativcoder/.local/share/rr/rr_demo-15\n```"]