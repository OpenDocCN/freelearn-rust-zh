["```rs\n cargo new --bin nickel-demo && cd nickel-demo\n\n```", "```rs\n cargo build\n\n```", "```rs\n        //-- #########################\n        //-- Task: Starting a simple hello world nickel web app\n        //-- Author: Vigneshwer.D\n        //-- Version: 1.0.0\n        //-- Date: 20 April 17\n        //-- ######################### \n\n```", "```rs\n        #[macro_use] extern crate nickel;\n\n        use nickel::Nickel;\n\n```", "```rs\n        fn main() {\n          let mut server = Nickel::new();\n\n          server.utilize(router! {\n          get \"**\" => |_req, _res| {\n          \"Hello world!\"\n          }\n          });\n\n        server.listen(\"127.0.0.1:6767\");\n        }\n\n```", "```rs\n cargo run\n\n```", "```rs\n cargo new --bin nickel-routing && cd nickel-routing\n\n```", "```rs\n cargo build\n\n```", "```rs\n        //-- #########################\n        //-- Task: Routing using nickel\n        //-- Author: Vigneshwer.D\n        //-- Version: 1.0.0\n        //-- Date: 20 April 17\n        //-- ######################### \n\n```", "```rs\n        #[macro_use] extern crate nickel;\n\n        use nickel::{Nickel, HttpRouter};\n\n```", "```rs\n        fn main() {\n        let mut server = Nickel::new();\n\n        server.get(\"/bar\", middleware!(\"This is the /bar\n        handler\"));\n        server.get(\"/user/:userid\", middleware! { |request|\n        format!(\"This is user: {:?}\", request.param(\"userid\"))\n        });\n        server.get(\"/a/*/d\", middleware!(\"matches /a/b/d but\n        not /a/b/c/d\"));\n        server.get(\"/a/**/d\", middleware!(\"This matches /a/b/d\n        and also /a/b/c/d\"));\n\n        server.listen(\"127.0.0.1:6767\");\n        }\n\n```", "```rs\n cargo run\n\n```", "```rs\n cargo new nickel-jsonhandling --bin && cd nickel-    jsonhandling\n\n```", "```rs\n cargo build\n\n```", "```rs\n        //-- #########################\n        //-- Task: Json handling in nickel\n        //-- Author: Vigneshwer.D\n        //-- Version: 1.0.0\n        //-- Date: 20 April 17\n        //-- #########################\n\n```", "```rs\n        extern crate rustc_serialize;\n        #[macro_use] extern crate nickel;\n\n        use nickel::{Nickel, HttpRouter, JsonBody};\n\n```", "```rs\n        #[derive(RustcDecodable, RustcEncodable)]\n        struct Person {\n          firstname: String,\n          lastname: String,\n        }\n\n```", "```rs\n        fn main() {\n          let mut server = Nickel::new();\n\n          server.post(\"/a/post/request\", middleware! {\n          |request,\n          response|\n          let person = request.json_as::<Person>().unwrap();\n          format!(\"Hello {} {}\", person.firstname,\n          person.lastname)});\n\n          server.listen(\"127.0.0.1:6767\");\n        }\n\n```", "```rs\n cargo run\n\n```", "```rs\n        curl -H \"Content-Type: application/json\" -X POST -d\n        '{\"firstname\":\"Vigneshwer\",\"lastname\":\"Dhinakaran\"}'\n        http://127.0.0.1:6767/a/post/request\n\n```", "```rs\n cargo new nickel-errorhandling --bin && cd nickel-errorhandling\n\n```", "```rs\n cargo build\n\n```", "```rs\n        //-- #########################\n        //-- Task: Custom error handling in nickel\n        //-- Author: Vigneshwer.D\n        //-- Version: 1.0.0\n        //-- Date: 20 April 17\n        //-- ######################### \n\n```", "```rs\n        #[macro_use] extern crate nickel;\n\n        use std::io::Write;\n        use nickel::status::StatusCode::NotFound;\n        use nickel::{Nickel, NickelError, Action, Continue,\n        Halt, Request};\n\n```", "```rs\n        fn main() {\n          let mut server = Nickel::new();\n\n          //this is how to overwrite the default error handler\n          to\n          handle 404 cases with a custom view\n          fn custom_404<'a>(err: &mut NickelError, _req: &mut\n          Request) -> Action {\n            if let Some(ref mut res) = err.stream {\n              if res.status() == NotFound {\n                let _ = res.write_all(b\"<h1>Page Does not exist\n                :\n                (</h1>\");\n                return Halt(())\n              }\n            }\n\n            Continue(())\n            }\n\n          let custom_handler: fn(&mut NickelError, &mut\n          Request)\n          -> Action = custom_404;\n\n          server.handle_error(custom_handler);\n\n          server.listen(\"127.0.0.1:6767\");\n\n        }\n\n```", "```rs\n cargo run\n\n```", "```rs\n cargo new nickel-template --bin && cd nickel-template\n\n```", "```rs\n cargo build\n\n```", "```rs\n        //-- #########################\n        //-- Task: Templating in nickel\n        //-- Author: Vigneshwer.D\n        //-- Version: 1.0.0\n        //-- Date: 20 April 17\n        //-- ######################### \n\n```", "```rs\n        #[macro_use] extern crate nickel;\n\n        use std::collections::HashMap;\n        use nickel::{Nickel, HttpRouter};\n\n```", "```rs\n        fn main() {\n          let mut server = Nickel::new();\n\n          server.get(\"/\", middleware! { |_, response|\n          let mut data = HashMap::new();\n          data.insert(\"name\", \"viki\");\n          return\n          response.render(\"examples/assets/template.tpl\",\n          &data);\n          });\n\n          server.listen(\"127.0.0.1:6767\");\n        }\n\n```", "```rs\n mkdir -p examples/assets\n        cd ./examples/assets\n        touch template.tpl\n\n```", "```rs\n        <html>\n        <body>\n        <h1>\n        Hello {{ name }}!\n        </h1>\n        </body>\n        </html>\n\n```", "```rs\n cargo run\n\n```"]