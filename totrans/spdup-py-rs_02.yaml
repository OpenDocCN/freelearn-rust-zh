- en: 'Section 2: Fusing Rust with Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are familiar with Rust, we can start utilizing it. Before we do
    this, we need to cover how to build Python packages that can be installed with
    pip. Once this has been done, we can build Python pip modules in Rust. This is
    where we can import our compiled Rust code into our Python code and run it with
    all the benefits of Rust in our Python application. We then go further into this
    by working with Python objects and using Python modules inside the Rust code.
  prefs: []
  type: TYPE_NORMAL
- en: 'This section comprises the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B17720_04_Final_SK_ePub.xhtml#_idTextAnchor062), *Building pip
    Modules in Python*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B17720_05_Final_SK_ePub.xhtml#_idTextAnchor084), *Creating a
    Rust Interface for Our pip Module*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B17720_06_Final_SK_ePub.xhtml#_idTextAnchor100), *Working with
    Python Objects in Rust*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B17720_07_Final_SK_ePub.xhtml#_idTextAnchor122), *Using Python
    Modules in Rust*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B17720_08_Final_SK_ePub.xhtml#_idTextAnchor142), *Structuring
    an End-to-End Python Module in Rust*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
