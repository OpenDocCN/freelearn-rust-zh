["```rs\nrustup component add rustfmt\n```", "```rs\ncargo install --git https://github.com/rust-lang/rustfmt\n```", "```rs\ncargo fmt\n```", "```rs\ncargo fmt -- --check\n```", "```rs\nDiff in ./microservice/src/main.rs at line 1:\n-use actix_web::{App, middleware, server, App};\n+use actix_web::{middleware, server, App, App};\n\n fn index(_req: &HttpRequest) -> &'static str {\n     \"Microservice\"\nDiff in ./microservice/src/main.rs at line 8:\n     env_logger::init();\n     let sys = actix::System::new(\"microservice\");\n     server::new(|| {\n-        App::new().middleware(middleware::Logger::default()).resource(\"/\", |r| r.f(index))\n+        App::new()\n+            .middleware(middleware::Logger::default())\n+            .resource(\"/\", |r| r.f(index))\n     })\n     .bind(\"127.0.0.1:8080\")\n     .unwrap()\n```", "```rs\nmax_width = 100\nhard_tabs = false\ntab_spaces = 4\nnewline_style = \"Auto\"\nuse_small_heuristics = \"Default\"\nreorder_imports = true\nreorder_modules = true\nremove_nested_parens = true\nedition = \"2015\"\nmerge_derives = true\nuse_try_shorthand = false\nuse_field_init_shorthand = false\nforce_explicit_abi = true\n```", "```rs\nrustup component add clippy\n```", "```rs\ncargo install --git https://github.com/rust-lang/rust-clippy\n```", "```rs\ncargo clippy\n```", "```rs\nstruct State {\n    vec: Box<Vec<u8>>,\n}\n```", "```rs\nwarning: you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\n --> src/main.rs:4:10\n  |\n4 |     vec: Box<Vec<u8>>,\n  |          ^^^^^^^^^^^^\n  |\n  = note: #[warn(clippy::box_vec)] on by default\n  = help: `Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation.\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#box_vec\n```", "```rs\ncargo clippy -- -D warnings\n```", "```rs\ncargo clippy --all-targets --all-features -- -D warnings\n```", "```rs\nwarning: you should put `MyCompany` between ticks in the documentation\n --> src/main.rs:8:29\n  |\n8 | /// This method connects to MyCompany API.\n  |                             ^^^^^^^^^\n  |\n  = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown\n```", "```rs\ndoc-valid-idents = [\"MyCompany\"]\n```", "```rs\n#![deny(\n    bare_trait_objects,\n    dead_code,\n)]\n#![warn(\n    missing_debug_implementations,\n    missing_docs,\n    while_true,\n    unreachable_pub,\n)]\n#![cfg_attr(\n    feature = \"cargo-clippy\",\n    deny(\n        clippy::doc_markdown,\n    ),\n)]\n```", "```rs\ncargo install cargo-fix\n```", "```rs\ncargo fix --edition\n```", "```rs\ncargo fix --edition-idioms\n```", "```rs\nlanguage: rust\ncache: cargo\nmatrix:\n  include:\n    - os: linux\n      rust: stable\n      env: TARGET=x86_64-unknown-linux-gnu\n    - os: linux\n      rust: nightly\n      env: TARGET=x86_64-unknown-linux-gnu\n    - os: osx\n      rust: stable\n      env: TARGET=x86_64-apple-darwin\n    - os: osx\n      rust: nightly\n      env: TARGET=x86_64-apple-darwin\n```", "```rs\naddons:\n  apt:\n    packages:\n      - build-essential\n      - libcurl4-openssl-dev\n      - libssl-dev\n```", "```rs\nenv:\n  global:\n    - APPNAME=\"myapp\"\n```", "```rs\njobs:\n  include:\n    - name: rustfmt\n      install:\n        - rustup component add rustfmt\n      script:\n        - cargo fmt -- --check\n    - name: clippy\n      install:\n        - rustup component add clippy\n      script:\n        - cargo clippy\n    - name: test\n      script:\n        - cargo build --target $TARGET --verbose\n        - cargo test --target $TARGET --verbose\n```", "```rs\nos: Visual Studio 2015\nenvironment:\n  matrix:\n    - channel: stable\n      target: x86_64-pc-windows-msvc\n    - channel: nightly\n      target: i686-pc-windows-msvc\n    - channel: stable\n      target: x86_64-pc-windows-gnu\n    - channel: nightly\n      target: i686-pc-windows-gnu\n```", "```rs\ninstall:\n  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe\n  - rustup-init -yv --default-toolchain %channel% --default-host %target%\n  - set PATH=%PATH%;%USERPROFILE%\\.cargo\\bin\n  - rustup component add rustfmt\n  - rustup component add clippy\n  - rustc -vV\n  - cargo -vV\n```", "```rs\nbuild: false\ntest_script:\n  - cargo fmt -- --check\n  - cargo clippy\n  - cargo build\n  - cargo test\n```", "```rs\npipeline {\n    agent { dockerfile true }\n    stages {\n        stage('Rustfmt') {\n            steps {\n                sh \"cargo fmt -- --check\"\n            }\n        }\n        stage('Clippy') {\n            steps {\n                sh \"cargo clippy\"\n            }\n        }\n        stage('Build') {\n            steps {\n                sh \"cargo build\"\n            }\n        }\n        stage('Test') {\n            steps {\n                sh \"cargo test\"\n            }\n        }\n    }\n}\n```", "```rs\nversion: '3.1'\nservices:\n```", "```rs\ngit-server:\n    image: gogs/gogs\n    ports:\n        - '10022:22'\n        - '10080:3000'\n    volumes:\n        - ./gogs:/data\n```", "```rs\nteamcity:\n    image: jetbrains/teamcity-server\n    ports:\n        - '8111:8111'\n    volumes:\n        - ./teamcity/datadir:/data/teamcity_server/datadir\n        - ./teamcity/logs:/opt/teamcity/logs\n```", "```rs\nagent:\n    build: ./images/rust-slave\n    environment:\n        - SERVER_URL=http://teamcity:8111\n    volumes:\n        - ./teamcity/agent:/data/teamcity_agent/conf\n```", "```rs\nFROM jetbrains/teamcity-minimal-agent:latest\n\nRUN apt-get update\nRUN apt-get install -y build-essential\n\nENV RUST_VERSION=1.32.0\n\nRUN curl https://sh.rustup.rs -sSf \\\n | sh -s -- -y --no-modify-path --default-toolchain $RUST_VERSION\n\nENV PATH=/root/.cargo/bin:$PATH\n\nRUN rustup --version; \\\n cargo --version; \\\n rustc --version;\n\nRUN rustup component add rustfmt\nRUN rustup component add clippy\n```", "```rs\ndocker-compose up\n```", "```rs\ngit init\ngit add -A\ngit commit\ngit remote add origin http://localhost:10080/developer/microservice.git\ngit push origin master\n```"]